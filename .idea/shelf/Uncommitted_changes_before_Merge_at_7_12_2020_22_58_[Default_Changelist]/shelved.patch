Index: Yolopoly/src/models/controllers/InnerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package models.controllers;\r\n\r\nimport enumerations.Pawn;\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.animation.Timeline;\r\nimport javafx.animation.TranslateTransition;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.util.Duration;\r\nimport models.Dice;\r\nimport models.Player;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport static sample.Main.changeScreen;\r\n\r\npublic class InnerController {\r\n\r\n    @FXML\r\n    ImageView index0, index1, index2, index3, index4, index5, index6, index7, index8, index9, index10,index11,index12,index13,index14,index15,index16,index17,index18,index19, index20,index21,index22,index23,index24,index25,index26,index27,index28,index29, index30,index31,index32,index33,index34,index35,index36,index37,index38,index39;\r\n\r\n    @FXML\r\n    ImageView sq_bar1, sq_bar3, sq_bar6, sq_bar8, sq_bar9, sq_bar11, sq_bar13, sq_bar14, sq_bar16 ,sq_bar18, sq_bar19,sq_bar21, sq_bar23, sq_bar24, sq_bar26, sq_bar27, sq_bar29, sq_bar31, sq_bar32, sq_bar34, sq_bar37, sq_bar39;\r\n\r\n    @FXML\r\n    ImageView card_image, info_card, house_slot3, house_slot2, house_slot1, house_slot0;\r\n\r\n    @FXML\r\n    Label owner_label, owner_nick, price_rent_label, price_rent_value;\r\n\r\n    @FXML\r\n    ImageView pawn_1, pawn_2, pawn_3, pawn_4, pawn_5, pawn_6, pawn_7, pawn_8;\r\n\r\n    @FXML\r\n    Label testTextField;\r\n\r\n    @FXML\r\n    ImageView dice_1, dice_2;\r\n\r\n    @FXML\r\n    ImageView player_index1, player_index2, player_index3, player_index4, player_index5, player_index6, player_index7, player_index8;\r\n\r\n    @FXML\r\n    ImageView buy_button, sell_button;\r\n\r\n    ImageView[] pawnTest;\r\n    ImageView[] player_indexes;\r\n    ArrayList<ImageView> pawnTeam1;\r\n    ArrayList<ImageView> pawnTeam2;\r\n\r\n    Player p1, p2, p3, p4, p5, p6, p7, p8;\r\n\r\n    Pawn pw1, pw2, pw3, pw4;\r\n\r\n    Dice dice;\r\n\r\n    int pawntestint;\r\n\r\n    boolean pressedEndTurn = false;\r\n\r\n    Player[] players;\r\n\r\n    public InnerController() {\r\n        //Card Image and Info Card Variables Declaration\r\n        card_image = new ImageView();\r\n        house_slot0 = new ImageView();house_slot1 = new ImageView();house_slot2 = new ImageView();house_slot3 = new ImageView();\r\n        owner_label = new Label();owner_nick = new Label();\r\n        price_rent_label = new Label();price_rent_value = new Label();\r\n        sell_button = new ImageView();buy_button = new ImageView();\r\n\r\n        //Hotel and House Bars\r\n        sq_bar1  = new ImageView();sq_bar3  = new ImageView();sq_bar6  = new ImageView();sq_bar8  = new ImageView();sq_bar9  = new ImageView();sq_bar11 = new ImageView();sq_bar13 = new ImageView();sq_bar14 = new ImageView();sq_bar16 = new ImageView();sq_bar18 = new ImageView();sq_bar19 = new ImageView();sq_bar21 = new ImageView();sq_bar23 = new ImageView();sq_bar24 = new ImageView();sq_bar26 = new ImageView();sq_bar27 = new ImageView();sq_bar29 = new ImageView();sq_bar31 = new ImageView();sq_bar32 = new ImageView();sq_bar34 = new ImageView();sq_bar37 = new ImageView();sq_bar39 = new ImageView();\r\n\r\n        //Players Big Pawn Images\r\n        player_index1 = new ImageView();player_index2 = new ImageView();player_index3 = new ImageView();player_index4 = new ImageView();player_index5 = new ImageView();player_index6 = new ImageView();player_index7 = new ImageView();player_index8 = new ImageView();\r\n\r\n        //Pawns\r\n        pawn_1 = new ImageView();pawn_2 = new ImageView();pawn_3 = new ImageView();pawn_4 = new ImageView();pawn_5 = new ImageView();pawn_6 = new ImageView();pawn_7 = new ImageView();pawn_8 = new ImageView();\r\n\r\n        //Dices\r\n        dice = new Dice();\r\n        dice_1 = new ImageView();dice_2 = new ImageView();\r\n\r\n        //For Debug Issues\r\n        testTextField = new Label();\r\n\r\n        //Players -- Debug -- It should not be there i guess\r\n        p1 = new Player(\"p1\", false);p2 = new Player(\"p2\", false);p3 = new Player(\"p3\", true);p4 = new Player(\"p4\", false);p5 = new Player(\"p5\", false);p6 = new Player(\"p6\", false);p7 = new Player(\"p7\", false);p8 = new Player(\"p8\", false);\r\n    }\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        pressedEndTurn = true;\r\n        card_image.setVisible(false);\r\n\r\n        players = new Player[]{p1,p2,p3,p4,p5,p6,p7,p8};\r\n\r\n        pawnTest = new ImageView[]{pawn_1, pawn_2, pawn_3, pawn_4, pawn_5, pawn_6, pawn_7, pawn_8};\r\n\r\n        player_indexes = new ImageView[]{player_index1, player_index2, player_index3, player_index4, player_index5, player_index6, player_index7, player_index8};\r\n\r\n        pawnTeam1 = new ArrayList<>();\r\n        pawnTeam2 = new ArrayList<>();\r\n\r\n        pawnTeam1.add(pawn_1);pawnTeam1.add(pawn_2);pawnTeam1.add(pawn_5);pawnTeam1.add(pawn_6);\r\n\r\n        pawnTeam2.add(pawn_3);pawnTeam2.add(pawn_4);pawnTeam2.add(pawn_7);pawnTeam2.add(pawn_8);\r\n\r\n        owner_label.setVisible(false);\r\n        owner_nick.setVisible(false);\r\n        price_rent_label.setVisible(false);\r\n        price_rent_value.setVisible(false);\r\n\r\n        player_indexes[0].setImage(new Image(getClass().getResourceAsStream(\"sources/circle_active.png\")));\r\n\r\n        updateScreen();\r\n    }\r\n\r\n    int turn = 0;\r\n\r\n    @FXML\r\n    public void testFunction(){\r\n        pressedEndTurn = true;\r\n\r\n        turn++;\r\n        turn = turn % 8;\r\n\r\n        for (int i = 0; i < player_indexes.length; i++){\r\n            player_indexes[i].setImage(new Image(getClass().getResourceAsStream(\"sources/circle.png\")));\r\n        }\r\n        player_indexes[turn].setImage(new Image(getClass().getResourceAsStream(\"sources/circle_active.png\")));\r\n\r\n        System.out.println(turn);\r\n    }\r\n\r\n    public void movePawn(Player tmpPlayer, ImageView tmpPawn, int moveCount, boolean pawnIsLonged){\r\n        int tmpCrtPst = tmpPlayer.getCurrentPosition();\r\n\r\n        double pawnXtmp = tmpPawn.getLayoutX();\r\n        double pawnYtmp = tmpPawn.getLayoutY();\r\n\r\n        while (moveCount > 0){\r\n\r\n            if(tmpPlayer.getCurrentPosition() <= 9){\r\n                if (pawnIsLonged && (tmpPlayer.getCurrentPosition() == 0 || tmpPlayer.getCurrentPosition() == 9)){\r\n                    pawnYtmp -= 124;\r\n                }\r\n                else if (!pawnIsLonged && (tmpPlayer.getCurrentPosition() == 0 || tmpPlayer.getCurrentPosition() == 9)){\r\n                    pawnYtmp -= 104;\r\n                }\r\n                else{\r\n                    pawnYtmp -= 80;\r\n                }\r\n            }\r\n            else if(tmpPlayer.getCurrentPosition() <= 19){\r\n                if (pawnIsLonged && (tmpPlayer.getCurrentPosition() == 10 || tmpPlayer.getCurrentPosition() == 19)){\r\n                    pawnXtmp += 124;\r\n                }\r\n                else if (!pawnIsLonged && (tmpPlayer.getCurrentPosition() == 10 || tmpPlayer.getCurrentPosition() == 19)){\r\n                    pawnXtmp += 104;\r\n                }\r\n                else {\r\n                    pawnXtmp += 80;\r\n                }\r\n            }\r\n            else if(tmpPlayer.getCurrentPosition() <= 29){\r\n                if (pawnIsLonged && (tmpPlayer.getCurrentPosition() == 20 || tmpPlayer.getCurrentPosition() == 29)){\r\n                    pawnYtmp += 124;\r\n                }\r\n                else if (!pawnIsLonged && (tmpPlayer.getCurrentPosition() == 20 || tmpPlayer.getCurrentPosition() == 29)){\r\n                    pawnYtmp += 104;\r\n                }\r\n                else {\r\n                    pawnYtmp += 80;\r\n                }\r\n            }\r\n            else if(tmpPlayer.getCurrentPosition() <= 39){\r\n                if (pawnIsLonged && (tmpPlayer.getCurrentPosition() == 30 || tmpPlayer.getCurrentPosition() == 39)){\r\n                    pawnXtmp -= 124;\r\n                }\r\n                else if (!pawnIsLonged && (tmpPlayer.getCurrentPosition() == 30 || tmpPlayer.getCurrentPosition() == 39)){\r\n                    pawnXtmp -= 104;\r\n                }\r\n                else {\r\n                    pawnXtmp -= 80;\r\n                }\r\n            }\r\n\r\n            tmpCrtPst++;\r\n            moveCount--;\r\n\r\n            //tmpPawn.setLayoutX(pawnXtmp);\r\n            //tmpPawn.setLayoutY(pawnYtmp);\r\n\r\n            TranslateTransition tt = new TranslateTransition(Duration.millis(1000), tmpPawn);\r\n            tt.setByX(pawnXtmp - tmpPawn.getLayoutX());\r\n            tt.setByY(pawnYtmp - tmpPawn.getLayoutY());\r\n            tt.setAutoReverse(false);\r\n            tt.play();\r\n\r\n            tmpPlayer.setCurrentPosition(tmpCrtPst);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void roll_dice(){\r\n        if (pressedEndTurn){\r\n            dice.roll();\r\n            int dice1 = dice.getDice1();\r\n            int dice2 = dice.getDice2();\r\n            int total = dice.getTotal();\r\n\r\n            System.out.println(\"sources/dice/dice_\" + dice1 + \".png\");\r\n\r\n            dice_1.setImage(new Image(getClass().getResourceAsStream(\"sources/dice/dice_\" + dice1 + \".png\")));\r\n            dice_2.setImage(new Image(getClass().getResourceAsStream(\"sources/dice/dice_\" + dice2 + \".png\")));\r\n\r\n            boolean tmpLonged = pawnTeam2.contains(pawnTest[turn]);\r\n\r\n            movePawn(players[turn], pawnTest[turn], total, tmpLonged);\r\n\r\n            testTextField.setText(\"dice1: \" + dice1 + \" dice2: \" + dice2 + \" total: \" + total + \" current pos : \" + players[turn].getCurrentPosition());\r\n            pressedEndTurn = false;\r\n        }\r\n        else {\r\n            testTextField.setText(\"Turu bitir önce\");\r\n        }\r\n    }\r\n\r\n    int lastIndexOfCard = -1;\r\n\r\n    @FXML\r\n    public void indexes(MouseEvent e) throws NullPointerException {\r\n        String tmpIndex = e.getSource().toString().substring(13,21).replace(',',' ').trim();\r\n        if(lastIndexOfCard != Integer.parseInt(tmpIndex.replace(\"index\", \"\"))){\r\n            lastIndexOfCard = Integer.parseInt(tmpIndex.replace(\"index\", \"\"));\r\n            card_image.setVisible(true);\r\n            try {\r\n                card_image.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/\" + tmpIndex + \".png\")));\r\n                info_card.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/info-card.png\")));\r\n                buy_button.setVisible(true);\r\n                sell_button.setVisible(true);\r\n            }\r\n            catch (NullPointerException npe){\r\n                System.out.println(\"Error :\" + npe.getMessage());\r\n            }\r\n            switch (tmpIndex) {\r\n                case \"index39\" -> {\r\n                    setInfoCard(3, \"Etophiana\", 1000000);\r\n                }\r\n                case \"index37\" -> {\r\n                    setInfoCard(2, \"HolyGuard\", 500000);\r\n                }\r\n                case \"index3\" -> {\r\n                    setInfoCard(5, \"Subfly\", 750000);\r\n                }\r\n                case \"index6\" -> {\r\n                    setInfoCard(0, \"-\", 150000);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            lastIndexOfCard = -1;\r\n            clear_indexes();\r\n        }\r\n    }\r\n\r\n    public void updateScreen(){\r\n        sq_bar39.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-house-3-h.png\")));\r\n        sq_bar37.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-house-2-h.png\")));\r\n        sq_bar3.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-hotel-v.png\")));\r\n        sq_bar34.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-hotel-h.png\")));\r\n        sq_bar32.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-house-3-h.png\")));\r\n        sq_bar21.setImage(new Image(getClass().getResourceAsStream(\"sources/squares/sq-hotel-v.png\")));\r\n    }\r\n\r\n    public void clear_indexes(){\r\n        card_image.setVisible(false);buy_button.setVisible(false);sell_button.setVisible(false);\r\n        card_image.setImage(null);info_card.setImage(null);house_slot0.setImage(null);house_slot1.setImage(null);house_slot2.setImage(null);house_slot3.setImage(null);\r\n        owner_nick.setText(\" \");price_rent_label.setText(\" \");price_rent_value.setText(\"\");\r\n        owner_label.setVisible(false);owner_nick.setVisible(false);price_rent_label.setVisible(false);price_rent_value.setVisible(false);\r\n    }\r\n\r\n    public void setInfoCard(int houseCount, String owner, int pr_value){\r\n\r\n        String pr;\r\n        if (owner.equals(\"-\")) {\r\n            pr = \"Price\";\r\n        }\r\n        else {\r\n            pr = \"Rent\";\r\n        }\r\n\r\n        owner_label.setVisible(true);\r\n        owner_nick.setVisible(true);\r\n        price_rent_label.setVisible(true);\r\n        price_rent_value.setVisible(true);\r\n\r\n        owner_nick.setText(owner);\r\n        price_rent_label.setText(pr);\r\n        price_rent_value.setText(pr_value + \"\");\r\n        switch (houseCount){\r\n            case 0 -> {\r\n                house_slot3.setImage(null);\r\n                house_slot2.setImage(null);\r\n                house_slot1.setImage(null);\r\n                house_slot0.setImage(null);\r\n            }\r\n            case 1 -> {\r\n                house_slot3.setImage(null);\r\n                house_slot2.setImage(null);\r\n                house_slot1.setImage(null);\r\n                house_slot0.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n            }\r\n            case 2 -> {\r\n                house_slot3.setImage(null);\r\n                house_slot2.setImage(null);\r\n                house_slot1.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot0.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n            }\r\n            case 3 -> {\r\n                house_slot3.setImage(null);\r\n                house_slot2.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot1.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot0.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n            }\r\n            case 4 -> {\r\n                house_slot3.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot2.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot1.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n                house_slot0.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/house.png\")));\r\n            }\r\n            case 5 -> {\r\n                house_slot0.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/hotel-bottom.png\")));\r\n                house_slot1.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/hotel-middle.png\")));\r\n                house_slot2.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/hotel-middle.png\")));\r\n                house_slot3.setImage(new Image(getClass().getResourceAsStream(\"sources/property-cards/hotel-top.png\")));\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void closeButtonPressed() throws Exception{\r\n        changeScreen(\"../models/controllers/OuterController.fxml\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Yolopoly/src/models/controllers/InnerController.java	(revision adb2c338362b12d63f356b56fb8b929e1d91dfd7)
+++ Yolopoly/src/models/controllers/InnerController.java	(date 1607370935341)
@@ -1,12 +1,9 @@
 package models.controllers;
 
 import enumerations.Pawn;
-import javafx.animation.AnimationTimer;
-import javafx.animation.Timeline;
 import javafx.animation.TranslateTransition;
 import javafx.fxml.FXML;
 import javafx.scene.control.Label;
-import javafx.scene.control.TextField;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.input.MouseEvent;
@@ -15,7 +12,6 @@
 import models.Player;
 
 import java.util.ArrayList;
-import java.util.concurrent.TimeUnit;
 
 import static sample.Main.changeScreen;
 
@@ -59,8 +55,6 @@
 
     Dice dice;
 
-    int pawntestint;
-
     boolean pressedEndTurn = false;
 
     Player[] players;
@@ -130,8 +124,8 @@
         turn++;
         turn = turn % 8;
 
-        for (int i = 0; i < player_indexes.length; i++){
-            player_indexes[i].setImage(new Image(getClass().getResourceAsStream("sources/circle.png")));
+        for (ImageView player_index : player_indexes) {
+            player_index.setImage(new Image(getClass().getResourceAsStream("sources/circle.png")));
         }
         player_indexes[turn].setImage(new Image(getClass().getResourceAsStream("sources/circle_active.png")));
 
Index: Yolopoly/Yolopoly.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"lib\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Yolopoly/Yolopoly.iml	(revision adb2c338362b12d63f356b56fb8b929e1d91dfd7)
+++ Yolopoly/Yolopoly.iml	(date 1607200790553)
@@ -1,6 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
+  <component name="NewModuleRootManager">
+    <output url="file://$MODULE_DIR$/out/production/Yolopoly" />
+    <output-test url="file://$MODULE_DIR$/out/test/Yolopoly" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
Index: Yolopoly/src/sample/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class Main extends Application {\r\n\r\n    private static int width = 1920;\r\n    private static int height = 1080;\r\n\r\n    static Stage primaryStage;\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n        Main.primaryStage = primaryStage;\r\n        changeScreen(\"../models/controllers/OuterController.fxml\");\r\n    }\r\n\r\n    public static void changeScreen(String source) throws Exception{\r\n        Parent root = FXMLLoader.load(Main.class.getResource(source));\r\n        primaryStage.setScene(new Scene(root, width , height));\r\n        primaryStage.setTitle(\"Yolopoly\");\r\n        primaryStage.setMaximized(true);\r\n        primaryStage.setFullScreen(true);\r\n        primaryStage.setResizable(false);\r\n        primaryStage.setFullScreenExitHint(\"\");\r\n        //primaryStage.setFullScreenExitKeyCombination(KeyCombination.NO_MATCH);\r\n        primaryStage.show();\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        launch(args);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Yolopoly/src/sample/Main.java	(revision adb2c338362b12d63f356b56fb8b929e1d91dfd7)
+++ Yolopoly/src/sample/Main.java	(date 1607201363717)
@@ -6,8 +6,6 @@
 import javafx.scene.Scene;
 import javafx.stage.Stage;
 
-import java.io.IOException;
-
 public class Main extends Application {
 
     private static int width = 1920;
@@ -33,7 +31,7 @@
         primaryStage.show();
     }
 
-    public static void main(String[] args) throws IOException {
+    public static void main(String[] args) {
         launch(args);
     }
 
